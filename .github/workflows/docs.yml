name: Documentation

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ final-master ]
  release:
    types: [ created ]

permissions:
  contents: read
  pages: write
  id-token: write

defaults:
  run:
    shell: bash

jobs:
  docs:
    runs-on: ubuntu-22.04
    outputs:
      id: docs_outputs
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with: { node-version: '10' }
      - name: Setup tools
        run: |
          # ... Ваши шаги ...
      - name: Run markdownlint
        run: markdownlint docs
      - name: Check Assets
        run: |
          ./check_assets_size.py
          ./check_unused_assets.py
      - name: Build GitBook
        run: |
         gitbook install
         gitbook build
      - name: Generate PDF
        id: generate-pdf
        env:
          GITBOOK_SKIP_PDF: ${{ secrets.GITBOOK_SKIP_PDF }}
        continue-on-error: ${{ env.GITBOOK_SKIP_PDF != '' }}
        if: ${{ github.event_name == 'push' }}
        run: |
          for i in 1 2 3 4; do gitbook pdf ./ _book/drone.pdf && break || sleep 1; done
          sudo apt-get -q install ghostscript
          gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/default -dNOPAUSE -dQUIET -dBATCH -dDetectDuplicateImages -dCompressFonts=true -r150 -sOutputFile=_book/drone_ru_compressed.pdf _book/drone_ru.pdf
          rm _book/drone_ru.pdf && mv _book/drone_ru_compressed.pdf _book/drone_ru.pdf
          ls -lah _book/drone*.pdf
          echo "::set-output name=pdf_files::$(find ./_book -type f -name 'drone*.pdf')"

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: docs
          path: _book

      - name: Find PDF files
        run: |
          pdf_files=$(find ./_book -type f -name "drone*.pdf")
          echo "PDF files found: $pdf_files"
          echo "::set-output name=pdf_files::$pdf_files"

  uploadPDF:
    needs: docs
    runs-on: ubuntu-22.04
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: docs
      - name: Use PDF files
        run: |
          pdf_files="${{ needs.docs.outputs.pdf_files }}"
          echo "PDF files to upload: $pdf_files"
      - name: Upload PDF
        uses: softprops/action-gh-release@v1
        if: ${{ github.event_name == 'release' }}
        with:
          files: ${{ needs.docs.outputs.pdf_files }}
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
